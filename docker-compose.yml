services:
  db:
    image: postgres:15-alpine
    container_name: booking_bot_db
    restart: always
    environment:
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_password
      POSTGRES_DB: booking_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "booking_user"]
      interval: 10s
      timeout: 3s
      retries: 5

  bot-gateway:
    build:
      context: . # <-- ИЗМЕНЕНИЕ
      dockerfile: bot-gateway/Dockerfile # <-- ИЗМЕНЕНИЕ
    env_file: .env
    secrets:
      - tg_token
    environment:
      TELEGRAM_BOT_TOKEN_FILE: /run/secrets/tg_token
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"

  booking-api:
    build:
      context: . # <-- ИЗМЕНЕНИЕ
      dockerfile: booking-api/Dockerfile # <-- ИЗМЕНЕНИЕ
    env_file: .env
    depends_on:
      - db
    ports:
      - "8081:8080"

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    command: ["redis-server", "--save", "60", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s

volumes:
  postgres_data:
    driver: local

secrets:
  tg_token:
    file: ./secrets/tg_token.txt