package com.bookingbot.gateway.handlers

import com.bookingbot.api.services.BookingService
import com.bookingbot.api.services.UserService
import com.github.kotlintelegrambot.dispatcher.Dispatcher
import com.github.kotlintelegrambot.dispatcher.callbackQuery
import com.github.kotlintelegrambot.entities.ChatId
import com.github.kotlintelegrambot.entities.InlineKeyboardMarkup
import com.github.kotlintelegrambot.entities.ParseMode
import com.github.kotlintelegrambot.entities.keyboard.InlineKeyboardButton
import java.time.ZoneId
import java.time.format.DateTimeFormatter

fun addAdminDashboardHandler(dispatcher: Dispatcher, userService: UserService, bookingService: BookingService) {

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω—è–º–∏"
    dispatcher.callbackQuery("admin_manage_bookings") {
        val adminId = callbackQuery.from.id
        val chatId = ChatId.fromId(adminId)

        // –ù–∞—Ö–æ–¥–∏–º –∫–ª—É–±, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–≤—è–∑–∞–Ω –∞–¥–º–∏–Ω
        val clubId = userService.getStaffClubId(adminId)
        if (clubId == null) {
            bot.answerCallbackQuery(callbackQuery.id, "–í—ã –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –Ω–∏ –∫ –æ–¥–Ω–æ–º—É –∫–ª—É–±—É.", showAlert = true)
            return@callbackQuery
        }

        val bookings = bookingService.findActiveBookingsByClub(clubId)

        if (bookings.isEmpty()) {
            bot.sendMessage(chatId, "–í –≤–∞—à–µ–º –∫–ª—É–±–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–µ–π.")
            return@callbackQuery
        }

        bot.sendMessage(chatId, "*–ê–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏ –≤ –≤–∞—à–µ–º –∫–ª—É–±–µ:*", parseMode = ParseMode.MARKDOWN)

        val formatter = DateTimeFormatter.ofPattern("dd.MM HH:mm").withZone(ZoneId.systemDefault())
        bookings.forEach { booking ->
            val bookingInfo = """
                *ID ${booking.id}* | ${formatter.format(booking.bookingTime)}
                *–ì–æ—Å—Ç—å:* ${booking.bookingGuestName ?: "N/A"}
                *–°—Ç–æ–ª:* ${booking.tableId} | *–ì–æ—Å—Ç–µ–π:* ${booking.partySize}
                *–ò—Å—Ç–æ—á–Ω–∏–∫:* ${booking.source} | *–°—Ç–∞—Ç—É—Å:* `${booking.status}`
            """.trimIndent()

            // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—Ä–æ–Ω—å—é (—Ç–µ –∂–µ, —á—Ç–æ –∏ –≤ –∫–∞–Ω–∞–ª–µ)
            val adminKeyboard = InlineKeyboardMarkup.create(
                listOf(
                    InlineKeyboardButton.CallbackData("‚úÖ –ü—Ä–∏—à–ª–∏", "admin_confirm_${booking.id}"),
                    InlineKeyboardButton.CallbackData("‚ùå –ù–µ—è–≤–∫–∞", "admin_noshow_${booking.id}"),
                    InlineKeyboardButton.CallbackData("üö´ –û—Ç–º–µ–Ω–∏—Ç—å", "admin_cancel_${booking.id}")
                )
            )

            bot.sendMessage(
                chatId = chatId,
                text = bookingInfo,
                parseMode = ParseMode.MARKDOWN,
                replyMarkup = adminKeyboard
            )
        }
    }
}