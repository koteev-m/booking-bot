// bot-gateway/src/main/kotlin/com/bookingbot/gateway/Bot.kt
package com.bookingbot.gateway

import com.github.kotlintelegrambot.bot
import com.github.kotlintelegrambot.dispatch
import com.github.kotlintelegrambot.dispatcher.command
import com.github.kotlintelegrambot.entities.ChatId
import com.github.kotlintelegrambot.entities.KeyboardReplyMarkup
import com.github.kotlintelegrambot.entities.keyboard.KeyboardButton
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import java.io.File

fun startTelegramBot() {
    CoroutineScope(Dispatchers.IO).launch {
        Bot.instance.startPolling()
        println("Telegram Bot is listening for updates...")
    }
}

object Bot {
    private const val SECRET_PATH = "/run/secrets/telegram_bot_token"

    private fun readToken(): String {
        val secretFile = File(SECRET_PATH)
        if (secretFile.exists()) {
            return secretFile.readText().trim()
        }
        return System.getenv("TELEGRAM_BOT_TOKEN")
            ?: throw IllegalStateException("Telegram token not found in secret file or environment variable")
    }

    val instance = bot {
        token = readToken()

        dispatch {
            command("start") {
                val mainMenu = KeyboardReplyMarkup(
                    keyboard = listOf(
                        listOf(KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫–ª—É–±"), KeyboardButton("–ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")),
                        listOf(KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"), KeyboardButton("–ú—É–∑—ã–∫–∞"))
                    ),
                    resizeKeyboard = true
                )
                bot.sendMessage(
                    chatId = ChatId.fromId(message.chat.id),
                    text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–æ–≤! üëã\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    replyMarkup = mainMenu
                )
            }
        }
    }
}