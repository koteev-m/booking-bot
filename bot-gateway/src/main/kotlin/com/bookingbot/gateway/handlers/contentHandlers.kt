package com.bookingbot.gateway.handlers

import com.github.kotlintelegrambot.dispatcher.Dispatcher
import com.github.kotlintelegrambot.dispatcher.callbackQuery
import com.github.kotlintelegrambot.entities.ChatId
import com.github.kotlintelegrambot.entities.InlineKeyboardMarkup
import com.github.kotlintelegrambot.entities.ParseMode
import com.github.kotlintelegrambot.entities.keyboard.InlineKeyboardButton

fun addContentHandlers(dispatcher: Dispatcher) {

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú—É–∑—ã–∫–∞"
    dispatcher.callbackQuery("music_sets") {
        val chatId = ChatId.fromId(callbackQuery.message!!.chat.id)

        // –ó–∞–≥–ª—É—à–∫–∞: –≤ –±—É–¥—É—â–µ–º —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –±—Ä–∞—Ç—å –∏–∑ –ë–î
        val musicSets = listOf(
            "DJ Proton - Live @ Cosmos (July 2025)" to "play_set_1",
            "DJ Neutron - Summer Mix" to "play_set_2",
            "DJ Electron - Night Vibes" to "play_set_3"
        )

        val musicButtons = musicSets.map { (title, callbackData) ->
            listOf(InlineKeyboardButton.CallbackData(text = title, callbackData = callbackData))
        }

        bot.sendMessage(
            chatId = chatId,
            text = "üéß –ü–æ—Å–ª–µ–¥–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Å–µ—Ç—ã –æ—Ç –Ω–∞—à–∏—Ö —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤:",
            replyMarkup = InlineKeyboardMarkup.create(musicButtons)
        )
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ç–∞
    dispatcher.callbackQuery {
        if (!callbackQuery.data.startsWith("play_set_")) return@callbackQuery

        val chatId = ChatId.fromId(callbackQuery.message!!.chat.id)
        val setId = callbackQuery.data

        // –ó–∞–≥–ª—É—à–∫–∞ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏
        val musicLinks = mapOf(
            "play_set_1" to "https://soundcloud.com/example/dj-proton-live",
            "play_set_2" to "https://www.youtube.com/watch?v=example2",
            "play_set_3" to "https://soundcloud.com/example/dj-electron-vibes"
        )

        val link = musicLinks[setId]
        val text = if (link != null) {
            "üé∂ *–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è!*\n\n[–°–ª—É—à–∞—Ç—å —Å–µ—Ç]($link)"
        } else {
            "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç —Å–µ—Ç."
        }

        bot.sendMessage(
            chatId = chatId,
            text = text,
            parseMode = ParseMode.MARKDOWN,
            disableWebPagePreview = false
        )
        bot.answerCallbackQuery(callbackQuery.id)
    }
}